rails generate controller controller-name
	generates controller and supporting view

rails generate model model-name name:type name:type....
	generates model
	rake db:migrate
		creates table in database for app
	
"form_for" for single level objects
	when updating models (rather than creating now)
		<%= form_for :model, url: model_path(@model), method: :patch do |f| %>
			method: :patch for REST protocol
			
@variable
	instance variable
	
:variable
	passed symbol
	
app/views/layouts/application.html.erb
	This isnt cross platform (correctly)
	for mac
		<%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track' => true %>
  		<%= javascript_include_tag 'application', 'data-turbolinks-track' => true %>
  	for windows
  		<%= stylesheet_link_tag    'default', media: 'all', 'data-turbolinks-track' => true %>
  		<%= javascript_include_tag 'default', 'data-turbolinks-track' => true %>
  	To fix windows and leave as "application", find runtimes.rb file associated with ExecJS and edit UTF-16LE to UTF-8
  
Since <IE9 does not fully support HTML5, insert the following lines to help with portability
	<!--[if lt IE 9]>
  		<script src="//cdnjs.cloudflare.com/ajax/libs/html5shiv/r29/html5.min.js">
  		</script>
	<![endif]-->  

To update a single attribute on rails console
	variable.update_attribute(:column, "value")
	
User "debugger" in controller to debug at controller level

Strong Parameters
	specify which parameters are REQUIRED
	specify which parameters are PERMITTED
	this can be done by specifying a helper function in the model file
		ex:
			def model_params
				params.require(:model).permitted(:column, :column)
			end